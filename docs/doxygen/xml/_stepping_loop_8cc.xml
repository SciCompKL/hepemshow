<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_stepping_loop_8cc" kind="file" language="C++">
    <compoundname>SteppingLoop.cc</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_stepping_loop_8hh" kindref="compound">SteppingLoop.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>G4HepEm<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4HepEmTLData.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4HepEmState.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4HepEmTrack.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4HepEmData.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4HepEmMatCutData.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>application<sp/>local<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_track_stack_8hh" kindref="compound">TrackStack.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physics_8hh" kindref="compound">Physics.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_geometry_8hh" kindref="compound">Geometry.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_box_8hh" kindref="compound">Box.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_results_8hh" kindref="compound">Results.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>we<sp/>always<sp/>calculate<sp/>the<sp/>distance<sp/>to<sp/>boundary<sp/>and<sp/>the<sp/>pre-step<sp/>point<sp/>safety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>is<sp/>very<sp/>far<sp/>from<sp/>being<sp/>optimal.<sp/>In<sp/>real<sp/>g4<sp/>tracking,<sp/>the<sp/>safety<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated<sp/>after<sp/>each<sp/>step<sp/>(post-stepSafety<sp/>=<sp/>pre-stepSafety<sp/>-<sp/>&quot;stepLength&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>So<sp/>as<sp/>long<sp/>as<sp/>we<sp/>the<sp/>step-length<sp/>is<sp/>within<sp/>the<sp/>up-to-date<sp/>safety<sp/>we<sp/>do<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>need<sp/>to<sp/>re-calculate<sp/>the<sp/>safety<sp/>and<sp/>we<sp/>do<sp/>not<sp/>need<sp/>to<sp/>calculate<sp/>the<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>boundary<sp/>as<sp/>for<sp/>sure<sp/>the<sp/>step<sp/>will<sp/>end<sp/>up<sp/>far<sp/>from<sp/>the<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>here<sp/>we<sp/>have<sp/>a<sp/>simplified<sp/>gometry<sp/>and<sp/>navigation....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_stepping_loop_1ac0a93eac4a0af26ef7fd033498fc9c3d" kindref="member">SteppingLoop::GammaStepper</ref>(G4HepEmTLData&amp;<sp/>theTLData,<sp/>G4HepEmState&amp;<sp/>theState,<sp/><ref refid="class_track_stack" kindref="compound">TrackStack</ref>&amp;<sp/>theTrackStack,<sp/><ref refid="class_geometry" kindref="compound">Geometry</ref>&amp;<sp/>theGeometry,<sp/><ref refid="struct_results" kindref="compound">Results</ref>&amp;<sp/>theResult,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventID)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>the<sp/>start<sp/>tracking<sp/>procedure<sp/>(reset<sp/>the<sp/>track<sp/>and<sp/>the<sp/>rng)<sp/>was<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>G4HepEmTrack*<sp/>theTrack<sp/>=<sp/>theTLData.GetPrimaryGammaTrack()-&gt;GetTrack();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>a<sp/>real<sp/>primary<sp/>track<sp/>then<sp/>I<sp/>need<sp/>to<sp/>locate<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>a<sp/>secondary<sp/>then<sp/>I<sp/>could<sp/>already<sp/>know,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>anyway:<sp/>locate<sp/>in<sp/>all<sp/>cases<sp/>to<sp/>keep<sp/>it<sp/>simply<sp/>(but<sp/>slower<sp/>anyway)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>numStep<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="class_box" kindref="compound">Box</ref>*<sp/>currentVolume<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onBoundary<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>indxLayer<sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>indxAbs<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>localPosition[3];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(theTrack-&gt;GetEKin()<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>distance<sp/>to<sp/>boundary<sp/>from<sp/>the<sp/>pre-step<sp/>point:<sp/>will<sp/>locate<sp/>the<sp/>pont</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>this<sp/>should<sp/>never<sp/>be<sp/>zero<sp/>as<sp/>zero<sp/>means<sp/>that<sp/>the<sp/>point<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(taking<sp/>into<sp/>account<sp/>the<sp/>direction<sp/>and<sp/>tolerance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>the<sp/>given<sp/>position<sp/>will<sp/>be<sp/>in<sp/>local<sp/>coordiantes<sp/>at<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>globalPosition<sp/>=<sp/>theTrack-&gt;GetPosition();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>curDirection<sp/><sp/><sp/>=<sp/>theTrack-&gt;GetDirection();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>local<sp/>position<sp/>=<sp/>global<sp/>position<sp/>(will<sp/>be<sp/>local<sp/>after<sp/>CalculateDistanceToOut)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Set3Vect(localPosition,<sp/>globalPosition);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distToBoundary<sp/>=<sp/>theGeometry.<ref refid="class_geometry_1af34c4d9e94d5026ed64104c3accbb354" kindref="member">CalculateDistanceToOut</ref>(localPosition,<sp/>curDirection,<sp/>&amp;currentVolume,<sp/>&amp;indxLayer,<sp/>&amp;indxAbs);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STOP<sp/>HERE<sp/>IF<sp/>`distToBoundary<sp/>=<sp/>1.0E+20`<sp/>i.e.<sp/>we<sp/>are<sp/>going<sp/>out<sp/>from<sp/>the<sp/>Calorimeter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distToBoundary<sp/>&gt;<sp/>1.0E+10)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>pre-step<sp/>point<sp/>safety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>preStepSafety<sp/><sp/>=<sp/>currentVolume-&gt;<ref refid="class_box_1aad17ace7ec8e5b684b09833a3d35a2bc" kindref="member">DistanceToOut</ref>(localPosition);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onBoundary<sp/>=<sp/>(preStepSafety<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>material-cuts<sp/>couple<sp/>index<sp/>from<sp/>the<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indxMaterial<sp/>=<sp/>currentVolume-&gt;<ref refid="class_box_1a0ae7ae21a5e8b6fab545ccb5d67b9763" kindref="member">GetMaterialIndx</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>fields<sp/>needed<sp/>for<sp/>computing<sp/>the<sp/>physics<sp/>step<sp/>limit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>material-cuts<sp/>couple<sp/>index<sp/>and<sp/>onBoundary<sp/>falg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hepEmIMC<sp/>=<sp/>theState.fData-&gt;fTheMatCutData-&gt;fG4MCIndexToHepEmMCIndex[indxMaterial];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrack-&gt;SetMCIndex(hepEmIMC);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrack-&gt;SetOnBoundary(onBoundary);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invoke<sp/>the<sp/>G4HepEmGammaManager<sp/>to<sp/>compute<sp/>how<sp/>far<sp/>this<sp/>photon<sp/>goes<sp/>till<sp/>the<sp/>next<sp/>interaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>1.<sp/>result<sp/>of<sp/>step<sp/>limit<sp/>will<sp/>be<sp/>written<sp/>into<sp/>`theTLData`<sp/>PrimaryTrack<sp/>HepEmTrack<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.<sp/>the<sp/>result<sp/>is<sp/>the<sp/>straight<sp/>line<sp/>distance<sp/>that<sp/>the<sp/>photon<sp/>needs<sp/>to<sp/>travel<sp/>along<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>till<sp/>the<sp/>next<sp/>physics<sp/>interaction<sp/>(assuming<sp/>the<sp/>same<sp/>material<sp/>along)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HepEmGammaManager::HowFar(theState.fData,<sp/>theState.fParameters,<sp/>&amp;theTLData);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distToPhysics<sp/>=<sp/>theTrack-&gt;GetGStepLength();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>shortest<sp/>from<sp/>the<sp/>geometry<sp/>and<sp/>the<sp/>physics<sp/>step<sp/>limits<sp/>as<sp/>the<sp/>current<sp/>(straight<sp/>line)<sp/>step<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stepLength<sp/>=<sp/>distToBoundary;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>onBoundary<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distToPhysics<sp/>&lt;<sp/>distToBoundary)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepLength<sp/>=<sp/>distToPhysics;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>onBoundary<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>a<sp/>small<sp/>push<sp/>if<sp/>the<sp/>step<sp/>length<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>it<sp/>can<sp/>happen<sp/>that<sp/>we<sp/>are<sp/>actually<sp/>(logically)<sp/>out<sp/>of<sp/>the<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>we<sp/>located<sp/>to<sp/>be<sp/>(due<sp/>to<sp/>this<sp/>simplified<sp/>&quot;navigaton&quot;).<sp/>So</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>just<sp/>apply<sp/>a<sp/>small<sp/>push<sp/>to<sp/>the<sp/>current<sp/>direction<sp/>and<sp/>relocate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stepLength==0.0)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepLength<sp/>=<sp/>1.0E-6;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AddTo3Vect(globalPosition,<sp/>curDirection,<sp/>stepLength);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>the<sp/>track<sp/>to<sp/>the<sp/>corresponding<sp/>post-step<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>AddTo3Vect(globalPosition,<sp/>curDirection,<sp/>stepLength);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>geometrical<sp/>step<sp/>length<sp/>(taking<sp/>the<sp/>selected)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrack-&gt;SetGStepLength(stepLength);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>`onBoundary`<sp/>falg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrack-&gt;SetOnBoundary(onBoundary);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>call<sp/>`Perform`<sp/>to<sp/>do<sp/>evything<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>with<sp/>the<sp/>track<sp/>regarding<sp/>physics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>in<sp/>case<sp/>of<sp/>boundary<sp/>limited<sp/>steps:<sp/>no<sp/>physics<sp/>interaction<sp/>just<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>`number<sp/>of<sp/>interaction<sp/>left`<sp/>based<sp/>on<sp/>the<sp/>current<sp/>step<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>in<sp/>case<sp/>of<sp/>physics<sp/>limited<sp/>step:<sp/>interaction<sp/>happens<sp/>additionaly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HepEmGammaManager::Perform(theState.fData,<sp/>theState.fParameters,<sp/>&amp;theTLData);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>and<sp/>stack<sp/>all<sp/>secondaries<sp/>(if<sp/>any)<sp/>that<sp/>has<sp/>been<sp/>produced.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theTLData.GetNumSecondaryElectronTrack()<sp/>+<sp/>theTLData.GetNumSecondaryGammaTrack()<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stepping_loop_1ae439018ca583b439734c8197547b9411" kindref="member">StackSecondaries</ref>(theTLData,<sp/>theTrackStack,<sp/>*theTrack);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>SteppingAction<sp/>(whenever<sp/>a<sp/>step<sp/>was<sp/>done<sp/>in<sp/>the<sp/>calorimeter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_stepping_loop_1a144aaedca4d30b305d2820764605af5d" kindref="member">SteppingAction</ref>(theResult,<sp/>*theTrack,<sp/>currentVolume,<sp/>stepLength,<sp/>indxLayer,<sp/>indxAbs,<sp/>eventID,<sp/>numStep);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>++numStep;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_stepping_loop_1a09ad124ae5c1192cb8e334608524ef71" kindref="member">SteppingLoop::ElectronStepper</ref>(G4HepEmTLData&amp;<sp/>theTLData,<sp/>G4HepEmState&amp;<sp/>theState,<sp/><ref refid="class_track_stack" kindref="compound">TrackStack</ref>&amp;<sp/>theTrackStack,<sp/><ref refid="class_geometry" kindref="compound">Geometry</ref>&amp;<sp/>theGeometry,<sp/><ref refid="struct_results" kindref="compound">Results</ref>&amp;<sp/>theResult,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventID)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>the<sp/>start<sp/>tracking<sp/>procedure<sp/>(reset<sp/>the<sp/>track<sp/>and<sp/>the<sp/>rng)<sp/>was<sp/>already<sp/>done<sp/>in<sp/>the<sp/>EventLoop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>G4HepEmTrack*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theTrack<sp/>=<sp/>theTLData.GetPrimaryElectronTrack()-&gt;GetTrack();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>G4HepEmMSCTrackData*<sp/><sp/>theMSCData<sp/>=<sp/>theTLData.GetPrimaryElectronTrack()-&gt;GetMSCTrackData();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>a<sp/>real<sp/>primary<sp/>track<sp/>then<sp/>I<sp/>need<sp/>to<sp/>locate<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>a<sp/>secondary<sp/>then<sp/>I<sp/>could<sp/>already<sp/>know,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>anyway:<sp/>locate<sp/>in<sp/>all<sp/>cases<sp/>to<sp/>keep<sp/>it<sp/>simply<sp/>(but<sp/>slower<sp/>anyway)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>numStep<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="class_box" kindref="compound">Box</ref>*<sp/>currentVolume<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onBoundary<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>indxLayer<sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>indxAbs<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>localPosition[3];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasOnBoundary<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>bool<sp/>wasPushed<sp/><sp/><sp/><sp/><sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>tracking<sp/>while<sp/>the<sp/>kinetic<sp/>energy<sp/>drops<sp/>to<sp/>zero<sp/>(i.e.<sp/>e-/e+<sp/>lose<sp/>all<sp/>its<sp/>energy;<sp/>e+<sp/>annihilates)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unless<sp/>the<sp/>track<sp/>is<sp/>going<sp/>out<sp/>of<sp/>the<sp/>Calorimeter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(theTrack-&gt;GetEKin()<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>distance<sp/>to<sp/>boundary<sp/>from<sp/>the<sp/>pre-step<sp/>point:<sp/>will<sp/>locate<sp/>the<sp/>pont</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>this<sp/>should<sp/>never<sp/>be<sp/>zero<sp/>as<sp/>zero<sp/>means<sp/>that<sp/>the<sp/>point<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(taking<sp/>into<sp/>account<sp/>the<sp/>direction<sp/>and<sp/>tolerance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>the<sp/>given<sp/>position<sp/>will<sp/>be<sp/>in<sp/>local<sp/>coordiantes<sp/>at<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>globalPosition<sp/>=<sp/>theTrack-&gt;GetPosition();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>curDirection<sp/><sp/><sp/>=<sp/>theTrack-&gt;GetDirection();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>local<sp/>position<sp/>=<sp/>global<sp/>position<sp/>(will<sp/>be<sp/>local<sp/>after<sp/>CalculateDistanceToOut)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Set3Vect(localPosition,<sp/>globalPosition);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distToBoundary<sp/>=<sp/>theGeometry.<ref refid="class_geometry_1af34c4d9e94d5026ed64104c3accbb354" kindref="member">CalculateDistanceToOut</ref>(localPosition,<sp/>curDirection,<sp/>&amp;currentVolume,<sp/>&amp;indxLayer,<sp/>&amp;indxAbs);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>STOP<sp/>HERE<sp/>IF<sp/>`distToBoundary<sp/>=<sp/>1.0E+20`<sp/>i.e.<sp/>we<sp/>are<sp/>going<sp/>out<sp/>from<sp/>the<sp/>Calorimeter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distToBoundary<sp/>&gt;<sp/>1.0E+10)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>pre-step<sp/>point:<sp/>calculate<sp/>safety<sp/>and<sp/>check<sp/>if<sp/>on-boundary<sp/>(use<sp/>only<sp/>if<sp/>we<sp/>do<sp/>not<sp/>know<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>step<sp/>ended<sp/>up<sp/>on<sp/>boundary<sp/>i.e.<sp/>use<sp/>only<sp/>in<sp/>the<sp/>very<sp/>first<sp/>or<sp/>pushed<sp/>steps)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>safety<sp/><sp/><sp/>=<sp/>currentVolume-&gt;<ref refid="class_box_1aad17ace7ec8e5b684b09833a3d35a2bc" kindref="member">DistanceToOut</ref>(localPosition);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onBoundary<sp/>=<sp/>numStep<sp/>==<sp/>0<sp/>?<sp/>(safety&lt;5.0E-10)<sp/>:<sp/>wasOnBoundary;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>preStepSafety<sp/>=<sp/>onBoundary<sp/>?<sp/>0.0<sp/>:<sp/>safety;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>material-cuts<sp/>couple<sp/>index<sp/>from<sp/>the<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indxMaterial<sp/>=<sp/>currentVolume-&gt;<ref refid="class_box_1a0ae7ae21a5e8b6fab545ccb5d67b9763" kindref="member">GetMaterialIndx</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>fields<sp/>needed<sp/>for<sp/>computing<sp/>the<sp/>physics<sp/>step<sp/>limit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>material-cuts<sp/>couple<sp/>index<sp/>and<sp/>onBoundary<sp/>falg<sp/>and<sp/>the<sp/>additional<sp/>Safety<sp/>for<sp/>e-/e+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hepEmIMC<sp/>=<sp/>theState.fData-&gt;fTheMatCutData-&gt;fG4MCIndexToHepEmMCIndex[indxMaterial];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrack-&gt;SetMCIndex(hepEmIMC);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrack-&gt;SetOnBoundary(onBoundary);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>additional<sp/>pre-step-point<sp/>safety<sp/>that<sp/>is<sp/>used<sp/>in<sp/>the<sp/>MSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrack-&gt;SetSafety(preStepSafety);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invoke<sp/>the<sp/>G4HepEmElectronManager<sp/>to<sp/>compute<sp/>how<sp/>far<sp/>this<sp/>e-/e+<sp/>goes<sp/>till<sp/>the<sp/>next<sp/>interaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(that<sp/>might<sp/>be<sp/>simply<sp/>continuous<sp/>step<sp/>limit<sp/>due<sp/>to<sp/>energy<sp/>loss<sp/>or<sp/>MSC<sp/>that<sp/>do<sp/>not<sp/>produce<sp/>seconday)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>1.<sp/>result<sp/>of<sp/>step<sp/>limit<sp/>will<sp/>be<sp/>written<sp/>into<sp/>`theTLData`<sp/>PrimaryTrack<sp/>HepEmTrack<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.<sp/>the<sp/>result<sp/>is<sp/>the<sp/>straight<sp/>line<sp/>distance<sp/>that<sp/>the<sp/>e-/e+<sp/>needs<sp/>to<sp/>travel<sp/>along<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3.<sp/>at<sp/>the<sp/>end,<sp/>an<sp/>additional<sp/>lateral<sp/>displacement<sp/>might<sp/>be<sp/>applied<sp/>(along<sp/>the<sp/>perpendicular<sp/>plane)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>due<sp/>to<sp/>MSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4.<sp/>also<sp/>note,<sp/>that<sp/>the<sp/>real<sp/>length<sp/>(physical)<sp/>of<sp/>the<sp/>step<sp/>is<sp/>longer<sp/>than<sp/>the<sp/>straight<sp/>light<sp/>along<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original<sp/>direction<sp/>(geometrical)<sp/>step<sp/>length<sp/>due<sp/>to<sp/>MSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HepEmElectronManager::HowFar(theState.fData,<sp/>theState.fParameters,<sp/>&amp;theTLData);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distToPhysics<sp/>=<sp/>theTrack-&gt;GetGStepLength();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>shortest<sp/>from<sp/>the<sp/>geometry<sp/>and<sp/>physics<sp/>step<sp/>limits<sp/>as<sp/>current<sp/>(straight<sp/>line)<sp/>step<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>along<sp/>the<sp/>original<sp/>direction<sp/>and<sp/>see<sp/>if<sp/>the<sp/>post-step<sp/>point<sp/>is<sp/>on-boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stepLength<sp/>=<sp/>distToBoundary;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>onBoundary<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distToPhysics<sp/>&lt;<sp/>distToBoundary)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepLength<sp/>=<sp/>distToPhysics;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>onBoundary<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>a<sp/>small<sp/>push<sp/>if<sp/>the<sp/>step<sp/>length<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>it<sp/>can<sp/>happen<sp/>that<sp/>we<sp/>are<sp/>actually<sp/>(logically)<sp/>out<sp/>of<sp/>the<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>we<sp/>located<sp/>to<sp/>be<sp/>(due<sp/>to<sp/>this<sp/>simplified<sp/>&quot;navigaton&quot;).<sp/>So</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>just<sp/>apply<sp/>a<sp/>small<sp/>push<sp/>to<sp/>the<sp/>current<sp/>direction<sp/>and<sp/>relocate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>wasPushed<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stepLength==0.0)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>wasPushed<sp/><sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepLength<sp/>=<sp/>1.0E-6;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AddTo3Vect(globalPosition,<sp/>curDirection,<sp/>stepLength);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>the<sp/>track<sp/>to<sp/>the<sp/>corresponding<sp/>post-step<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>AddTo3Vect(globalPosition,<sp/>curDirection,<sp/>stepLength);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>geometrical<sp/>step<sp/>length<sp/>(taking<sp/>the<sp/>selected)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrack-&gt;SetGStepLength(stepLength);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>`onBoundary`<sp/>falg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrack-&gt;SetOnBoundary(onBoundary);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>if<sp/>this<sp/>step<sp/>ended<sp/>up<sp/>on<sp/>the<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>wasOnBoundary<sp/>=<sp/>onBoundary;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>call<sp/>`Perform`<sp/>to<sp/>do<sp/>evything<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>with<sp/>the<sp/>track<sp/>regarding<sp/>physics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>the<sp/>continuous<sp/>interactions<sp/>will<sp/>be<sp/>performed<sp/>in<sp/>all<sp/>cases<sp/>(i.e.<sp/>independently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>geometry<sp/>or<sp/>physics<sp/>limited<sp/>the<sp/>step):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>=<sp/>these<sp/>continuous<sp/>interactions<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.<sp/>first<sp/>the<sp/>geometrical<sp/>step<sp/>is<sp/>converted<sp/>to<sp/>physical<sp/>by<sp/>accounting<sp/>the<sp/>effects<sp/>of<sp/>MSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<sp/>this<sp/>real<sp/>physical<sp/>step<sp/>length<sp/>is<sp/>used<sp/>to<sp/>compute<sp/>the<sp/>energy<sp/>loss<sp/>due<sp/>to<sp/>sub-threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interactions<sp/>(the<sp/>mean<sp/>energy<sp/>loss<sp/>is<sp/>comuted<sp/>then<sp/>fluctuation<sp/>is<sp/>added)<sp/>`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>in<sp/>case<sp/>of<sp/>continuous<sp/>physics<sp/>or<sp/>boundary<sp/>limited<sp/>the<sp/>step:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>=<sp/>no<sp/>further<sp/>physics<sp/>interaction<sp/>just<sp/>update<sp/>of<sp/>the<sp/>`number<sp/>of<sp/>interaction<sp/>left`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>based<sp/>on<sp/>the<sp/>current<sp/>real<sp/>(i.e.<sp/>physical)<sp/>step<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>in<sp/>case<sp/>of<sp/>physics<sp/>limited<sp/>step:<sp/>discrete<sp/>interaction,<sp/>producing<sp/>seondary<sp/>particle(s),<sp/>happens<sp/>additionaly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>the<sp/>original<sp/>direction<sp/>as<sp/>it<sp/>will<sp/>be<sp/>changed<sp/>during<sp/>the<sp/>physics<sp/>(even<sp/>without<sp/>discrete<sp/>interaction<sp/>due<sp/>to<sp/>MSC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orgDirection[3];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>Set3Vect(orgDirection,<sp/>curDirection);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HepEmElectronManager::Perform(theState.fData,<sp/>theState.fParameters,<sp/>&amp;theTLData);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>the<sp/>real,<sp/>i.e.<sp/>physical<sp/>step<sp/>length<sp/>(only<sp/>if<sp/>MSC<sp/>is<sp/>active<sp/>in<sp/>G4HepEmElectronManager<sp/>because<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>physical<sp/>step<sp/>length<sp/>stays<sp/>zero<sp/>when<sp/>MSC<sp/>is<sp/>not<sp/>active<sp/>as<sp/>physical<sp/>=<sp/>geometrical<sp/>in<sp/>that<sp/>case)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pStepLength<sp/>=<sp/>theMSCData-&gt;fTrueStepLength<sp/>&gt;<sp/>0.0<sp/>?<sp/>theMSCData-&gt;fTrueStepLength<sp/>:<sp/>stepLength;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>displacement<sp/>and<sp/>check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>apply<sp/>(should<sp/>not<sp/>if<sp/>the<sp/>energy<sp/>is<sp/>zero<sp/>but<sp/>ok<sp/>keep<sp/>its<sp/>simply)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>apply<sp/>it<sp/>if<sp/>its<sp/>length<sp/>is<sp/>lonegr<sp/>than<sp/>a<sp/>minimum<sp/>and<sp/>we<sp/>are<sp/>not<sp/>on<sp/>boudnry<sp/>(i.e.<sp/>the<sp/>current<sp/>post-step<sp/>point)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!onBoundary)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>displacement<sp/><sp/><sp/><sp/>=<sp/>theMSCData-&gt;GetDisplacement();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>dLength2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>displacement[0]*displacement[0]<sp/>+<sp/>displacement[1]*displacement[1]<sp/>+<sp/>displacement[2]*displacement[2];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>kGeomMinLength<sp/><sp/>=<sp/>5.0e-8;<sp/><sp/></highlight><highlight class="comment">//<sp/>0.05<sp/>[nm]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>kGeomMinLength2<sp/>=<sp/>kGeomMinLength*kGeomMinLength;<sp/></highlight><highlight class="comment">//<sp/>(0.05<sp/>[nm])^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dLength2<sp/>&gt;<sp/>kGeomMinLength2)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>displacement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>isPositionChanged<sp/><sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dispR<sp/>=<sp/>std::sqrt(dLength2);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>local<sp/>position<sp/>by<sp/>moving<sp/>to<sp/>the<sp/>local<sp/>longitudinal<sp/>(i.e.<sp/>along<sp/>the<sp/>original<sp/>direction)<sp/>post<sp/>step-point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>to<sp/>be<sp/>able<sp/>to<sp/>compute<sp/>the<sp/>safety<sp/>at<sp/>that<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddTo3Vect(localPosition,<sp/>orgDirection,<sp/>stepLength);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>current<sp/>post-step<sp/>point<sp/>safety<sp/>and<sp/>reduce<sp/>a<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>postSafety<sp/>=<sp/>0.99*currentVolume-&gt;<ref refid="class_box_1aad17ace7ec8e5b684b09833a3d35a2bc" kindref="member">DistanceToOut</ref>(localPosition);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(postSafety<sp/>&gt;<sp/>0.0<sp/>&amp;&amp;<sp/>dispR<sp/>&lt;<sp/>postSafety)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>far<sp/>away<sp/>from<sp/>boundary:<sp/>can<sp/>be<sp/>applied<sp/>safely<sp/>i.e.<sp/>we<sp/>won&apos;t<sp/>get<sp/>to<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddTo3Vect(globalPosition,<sp/>displacement);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//near<sp/>the<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaced<sp/>point<sp/>is<sp/>definitely<sp/>within<sp/>the<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dispR<sp/>&lt;<sp/>postSafety)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddTo3Vect(globalPosition,<sp/>displacement);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(postSafety<sp/>&gt;<sp/>kGeomMinLength)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduced<sp/>displacement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>(postSafety/dispR);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddTo3Vect(globalPosition,<sp/>displacement,<sp/>scale);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>very<sp/>small<sp/>postSafety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isPositionChanged<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>all<sp/>secondaries<sp/>(if<sp/>any)<sp/>that<sp/>has<sp/>been<sp/>produced<sp/>in<sp/>this<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theTLData.GetNumSecondaryElectronTrack()<sp/>+<sp/>theTLData.GetNumSecondaryGammaTrack()<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stepping_loop_1ae439018ca583b439734c8197547b9411" kindref="member">StackSecondaries</ref>(theTLData,<sp/>theTrackStack,<sp/>*theTrack);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_stepping_loop_1a144aaedca4d30b305d2820764605af5d" kindref="member">SteppingAction</ref>(theResult,<sp/>*theTrack,<sp/>currentVolume,<sp/>pStepLength,<sp/>indxLayer,<sp/>indxAbs,<sp/>eventID,<sp/>numStep);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>++numStep;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_stepping_loop_1ae439018ca583b439734c8197547b9411" kindref="member">SteppingLoop::StackSecondaries</ref>(G4HepEmTLData&amp;<sp/>theTLData,<sp/><ref refid="class_track_stack" kindref="compound">TrackStack</ref>&amp;<sp/>theTrackStack,<sp/>G4HepEmTrack&amp;<sp/>thePrimary)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>secondary:<sp/>only<sp/>possible<sp/>is<sp/>e-/e+<sp/>or<sp/>gamma<sp/>at<sp/>the<sp/>moemnt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSecElectron<sp/>=<sp/>theTLData.GetNumSecondaryElectronTrack();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSecGamma<sp/><sp/><sp/><sp/>=<sp/>theTLData.GetNumSecondaryGammaTrack();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSecondaries<sp/>=<sp/>numSecElectron+numSecGamma;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numSecondaries&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is=0;<sp/>is&lt;numSecElectron;<sp/>++is)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4HepEmTrack*<sp/>secTrack<sp/>=<sp/>theTLData.GetSecondaryElectronTrack(is)-&gt;GetTrack();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>secTrack-&gt;SetID(theTrackStack.<ref refid="class_track_stack_1a4e4f64496afddaacd19dcf99c1008402" kindref="member">GetNextTrackID</ref>());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>secTrack-&gt;SetParentID(thePrimary.GetID());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>secTrack-&gt;SetPosition(thePrimary.GetPosition());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>secTrack-&gt;SetMCIndex(thePrimary.GetMCIndex());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>theTrackStack.<ref refid="class_track_stack_1ae87bf7ff4f6836e10cf3b7e277b0d653" kindref="member">Copy</ref>(*secTrack,<sp/>theTrackStack.<ref refid="class_track_stack_1a0f33c1b9f159ba9d6e0953c67cf1e4e2" kindref="member">Insert</ref>());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>theTLData.ResetNumSecondaryElectronTrack();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is=0;<sp/>is&lt;numSecGamma;<sp/>++is)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4HepEmTrack*<sp/>secTrack<sp/>=<sp/>theTLData.GetSecondaryGammaTrack(is)-&gt;GetTrack();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>secTrack-&gt;SetID(theTrackStack.<ref refid="class_track_stack_1a4e4f64496afddaacd19dcf99c1008402" kindref="member">GetNextTrackID</ref>());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>secTrack-&gt;SetParentID(thePrimary.GetID());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>secTrack-&gt;SetPosition(thePrimary.GetPosition());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>secTrack-&gt;SetMCIndex(thePrimary.GetMCIndex());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>theTrackStack.<ref refid="class_track_stack_1ae87bf7ff4f6836e10cf3b7e277b0d653" kindref="member">Copy</ref>(*secTrack,<sp/>theTrackStack.<ref refid="class_track_stack_1a0f33c1b9f159ba9d6e0953c67cf1e4e2" kindref="member">Insert</ref>());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>theTLData.ResetNumSecondaryGammaTrack();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_stepping_loop_1a144aaedca4d30b305d2820764605af5d" kindref="member">SteppingLoop::SteppingAction</ref>(<ref refid="struct_results" kindref="compound">Results</ref>&amp;<sp/>theResult,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4HepEmTrack&amp;<sp/>theTrack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_box" kindref="compound">Box</ref>*<sp/></highlight><highlight class="comment">/*currentVolume*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentPhysStepLength,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indxLayer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indxAbsorber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*eventID*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*stepID*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indxLayer<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>edep<sp/>=<sp/>theTrack.GetEnergyDeposit();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edep<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>theResult.<ref refid="struct_results_1a868f71c54a3068363ff43ec93ce835f0" kindref="member">fEdepPerLayer</ref>.<ref refid="class_hist_1a83904f1855afc769d8cfa1be636f8172" kindref="member">Fill</ref>(indxLayer,<sp/>edep);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(indxAbsorber)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1a56300e62e8aa6cd9fb4b1cbdc6ced71d" kindref="member">fEdepAbs</ref><sp/>+=<sp/>edep;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1acb585ff9dcb316804b4ac5999ee914d8" kindref="member">fEdepGap</ref><sp/>+=<sp/>edep;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentPhysStepLength<sp/>&lt;=<sp/>0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theTrack.GetCharge()<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>theResult.<ref refid="struct_results_1af2f609c28fe15e0892646fae98c8ef16" kindref="member">fGammaTrackLenghtPerLayer</ref>.<ref refid="class_hist_1a83904f1855afc769d8cfa1be636f8172" kindref="member">Fill</ref>(indxLayer,<sp/>currentPhysStepLength);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1ae02070852cace2b3b94741ef81b200a0" kindref="member">fNumStepsGamma</ref><sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>theResult.<ref refid="struct_results_1a1d825ca3eb96f2604ee4750d6f93bd08" kindref="member">fElPosTrackLenghtPerLayer</ref>.<ref refid="class_hist_1a83904f1855afc769d8cfa1be636f8172" kindref="member">Fill</ref>(indxLayer,<sp/>currentPhysStepLength);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1acf7c36b68976c0d745abf51b964f9335" kindref="member">fNumStepsElPos</ref><sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>some<sp/>utilities<sp/>to<sp/>modify<sp/>3vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SteppingLoop::Set3Vect(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>v[0]<sp/>=<sp/>to;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>v[1]<sp/>=<sp/>to;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>v[2]<sp/>=<sp/>to;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SteppingLoop::Set3Vect(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>v[0]<sp/>=<sp/>to[0];</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>v[1]<sp/>=<sp/>to[1];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>v[2]<sp/>=<sp/>to[2];</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SteppingLoop::AddTo3Vect(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>u,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>v[0]<sp/>+=<sp/>scale*u[0];</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>v[1]<sp/>+=<sp/>scale*u[1];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>v[2]<sp/>+=<sp/>scale*u[2];</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/src/SteppingLoop.cc"/>
  </compounddef>
</doxygen>
