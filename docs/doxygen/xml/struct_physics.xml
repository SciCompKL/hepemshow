<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="struct_physics" kind="struct" language="C++" prot="public">
    <compoundname>Physics</compoundname>
    <includes refid="_physics_8hh" local="no">Physics.hh</includes>
    <briefdescription>
<para>The entire physics of the simulation is provided by <computeroutput>G4HepEm</computeroutput> </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>M. Novak </para>
</simplesect>
<simplesect kind="date"><para>July 2023</para>
</simplesect>
</para>
<para>This file includes the <computeroutput>G4HepEmRun</computeroutput> headers that give the complete set of run-time functioinalities required for the EM physics modelling. The corresponding implementations are pulled-in all together in the <computeroutput>Physics.cc</computeroutput> implentation file.</para>
<para>The only ingredient of <computeroutput>G4HepEmRun</computeroutput>, that a client application (such as <computeroutput>HepEmShow</computeroutput>), needs to provide is an implementation of a uniform random number generator. An object from such genertor must be plugged-in to the <computeroutput>G4HepEmRandomEngine</computeroutput> by implementing the two missing <computeroutput>G4HepEmRandomEngine::flat()</computeroutput> and <computeroutput>G4HepEmRandomEngine::flatArray(const int, double *)</computeroutput> methods. This is also done in the <computeroutput>Physics.cc</computeroutput> implementation file that completes the implementation of <computeroutput>G4HepEmRun</computeroutput>.</para>
<para><computeroutput><ref refid="class_u_random" kindref="compound">URandom</ref></computeroutput> is the uniform random number generator implemented in <computeroutput>HepEmShow</computeroutput> based on the 64-bit verson of the Mersenne Twister generator provided by c++11. An obejct of this is utilised in the <computeroutput>Physics.cc</computeroutput> file to complete the implementation of the <computeroutput>G4HepEmRandomEngine</computeroutput> as mentioned above. Then the actual uniform random number generator and the random engine objects are constructed (and set to the <computeroutput>G4HepEmTLData</computeroutput> obejct) in the <computeroutput>HepEmShow.cc</computeroutput> main function of the application. </para>
    </detaileddescription>
    <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/include/Physics.hh" line="7" column="1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
