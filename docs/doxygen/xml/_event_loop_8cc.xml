<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_event_loop_8cc" kind="file" language="C++">
    <compoundname>EventLoop.cc</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_event_loop_8hh" kindref="compound">EventLoop.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4HepEmTLData.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4HepEmState.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_primary_generator_8hh" kindref="compound">PrimaryGenerator.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_geometry_8hh" kindref="compound">Geometry.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_results_8hh" kindref="compound">Results.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_track_stack_8hh" kindref="compound">TrackStack.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_stepping_loop_8hh" kindref="compound">SteppingLoop.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sys/time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_loop_1a772f2e2b3835f932b9ee34a41731a302" kindref="member">EventLoop::ProcessEvents</ref>(G4HepEmTLData&amp;<sp/>theTLData,<sp/>G4HepEmState&amp;<sp/>theState,<sp/><ref refid="class_primary_generator" kindref="compound">PrimaryGenerator</ref>&amp;<sp/>thePrimaryGenerator,<sp/><ref refid="class_geometry" kindref="compound">Geometry</ref>&amp;<sp/>theGeometry,<sp/><ref refid="struct_results" kindref="compound">Results</ref>&amp;<sp/>theResult,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numEventToSimulate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbosity)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>create<sp/>the<sp/>container<sp/>for<sp/>the<sp/>tracks,<sp/>i.e.<sp/>the<sp/>track-stack:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>before<sp/>and<sp/>at<sp/>the<sp/>end<sp/>of<sp/>a<sp/>given<sp/>event<sp/>processing:<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>at<sp/>the<sp/>start<sp/>of<sp/>a<sp/>new<sp/>event:<sp/>all<sp/>tracks<sp/>of<sp/>a<sp/>new<sp/>event<sp/>are<sp/>inserted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(using<sp/>the<sp/>`PrimaryGenerator`)<sp/>that<sp/>is<sp/>a<sp/>single<sp/>primary<sp/>track<sp/>in<sp/>our<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(however,<sp/>should<sp/>be<sp/>no<sp/>problem<sp/>adding<sp/>more<sp/>than<sp/>one<sp/>primary<sp/>tracks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>during<sp/>the<sp/>processing<sp/>of<sp/>a<sp/>given<sp/>event:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>one<sp/>track<sp/>is<sp/>popped<sp/>and<sp/>tracked<sp/>till<sp/>the<sp/>end<sp/>of<sp/>its<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>while<sp/>all<sp/>generated<sp/>secondary<sp/>tracks<sp/>(if<sp/>any)<sp/>are<sp/>pushed<sp/>to<sp/>the<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="class_track_stack" kindref="compound">TrackStack</ref><sp/>theTrackStack;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>progress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbosity<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>---<sp/>EventLoop::ProcessEvents:<sp/>starts<sp/>simulation<sp/>of<sp/>N<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numEventToSimulate<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>events...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>the<sp/>event<sp/>ID<sp/>(counter)<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>initial<sp/>time<sp/>stamp<sp/>to<sp/>meaure<sp/>the<sp/>event<sp/>processing<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>start;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>gettimeofday(&amp;start,<sp/>NULL);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reportProgress<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbosity<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>reportProgress<sp/>=<sp/>std::max(1,<sp/>numEventToSimulate/10);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>enter<sp/>to<sp/>the<sp/>event<sp/>loop:<sp/>generate<sp/>and<sp/>simulate<sp/>as<sp/>many<sp/>events<sp/>as<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(eventID<sp/>&lt;<sp/>numEventToSimulate)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>progress<sp/>if<sp/>it<sp/>was<sp/>rquested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>verbosity<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(eventID+1)<sp/>%<sp/>reportProgress<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>starts<sp/>processing<sp/>#event<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(eventID+1)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0.<sp/>Reset<sp/>the<sp/>track<sp/>ID<sp/>before<sp/>each<sp/>new<sp/>event<sp/>such<sp/>that<sp/>it<sp/>starts<sp/>from<sp/>zero<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>theTrackStack.<ref refid="class_track_stack_1a1fd724f7c0c8b125304786c6f4b0e00c" kindref="member">ReSetTrackID</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Generate<sp/>the<sp/>primary<sp/>track<sp/>of<sp/>this<sp/>event:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>each<sp/>event<sp/>is<sp/>assumed<sp/>to<sp/>have<sp/>one<sp/>primary<sp/>now<sp/>just<sp/>for<sp/>simplicity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(no<sp/>problem<sp/>though<sp/>with<sp/>inserting<sp/>more<sp/>than<sp/>one<sp/>primary<sp/>into<sp/>the<sp/>stack)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>the<sp/>primary<sp/>track<sp/>is<sp/>the<sp/>very<sp/>first<sp/>track<sp/>in<sp/>the<sp/>stack,<sp/>so<sp/>obtain<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>track<sp/>reference<sp/>from<sp/>the<sp/>stack<sp/>and<sp/>generate<sp/>one<sp/>primary<sp/>into<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HepEmTrack&amp;<sp/>primaryTrack<sp/>=<sp/>theTrackStack.<ref refid="class_track_stack_1a0f33c1b9f159ba9d6e0953c67cf1e4e2" kindref="member">Insert</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>thePrimaryGenerator.<ref refid="class_primary_generator_1a92f67d7b500019b07eea258420c119ed" kindref="member">GenerateOne</ref>(primaryTrack);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>primaryTrack.SetID(theTrackStack.<ref refid="class_track_stack_1a4e4f64496afddaacd19dcf99c1008402" kindref="member">GetNextTrackID</ref>());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Invoke<sp/>the<sp/>beginning<sp/>of<sp/>event<sp/>action<sp/>(by<sp/>passing<sp/>the<sp/>current<sp/>primary<sp/>track)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_loop_1ae9a93b364296ff1e56ccdb2941eae4aa" kindref="member">BeginOfEventAction</ref>(theResult,<sp/>eventID,<sp/>primaryTrack);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>While<sp/>the<sp/>track-stack<sp/>becomes<sp/>empty:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>pop-up<sp/>one<sp/>track<sp/>(into<sp/>the<sp/>`HepEmTLData`<sp/>primary<sp/>electron/gamma<sp/>track)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>track<sp/>this<sp/>particle<sp/>till<sp/>the<sp/>end<sp/>of<sp/>its<sp/>history<sp/>in<sp/>a<sp/>step-by-step<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>NOTE:<sp/>secondaries<sp/>are<sp/>insterted<sp/>into<sp/>the<sp/>track-stack<sp/>after<sp/>each<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Processing/simulation<sp/>of<sp/>this<sp/>event<sp/>is<sp/>completed<sp/>when<sp/>the<sp/>track-stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>becomes<sp/>empty<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>NOTE:<sp/>`GetTypeOfNextTrack`<sp/>returns<sp/>-1,<sp/>0,<sp/>+1<sp/>if<sp/>the<sp/>next<sp/>track<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack<sp/>is<sp/>an<sp/>e-,<sp/>gamma<sp/>or<sp/>e+,<sp/>while<sp/>-999<sp/>in<sp/>case<sp/>of<sp/>empty<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trackType<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(trackType<sp/>=<sp/>theTrackStack.<ref refid="class_track_stack_1a71cd14abad3d3d0693658e5d4a1315eb" kindref="member">GetTypeOfNextTrack</ref>())<sp/>&gt;<sp/>-2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4HepEmTrack*<sp/>nextTrack<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depending<sp/>if<sp/>the<sp/>next<sp/>track<sp/>is<sp/>a<sp/>gamma<sp/>or<sp/>e-/e+<sp/>track:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trackType<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>track<sp/>is<sp/>a<sp/>gamma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>obtain<sp/>the<sp/>primary<sp/>gamma<sp/>track<sp/>from<sp/>the<sp/>TL-data<sp/>which<sp/>the<sp/>next<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>from<sp/>the<sp/>stack<sp/>will<sp/>be<sp/>popped<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4HepEmGammaTrack*<sp/>gTrack<sp/>=<sp/>theTLData.GetPrimaryGammaTrack();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>perform<sp/>the<sp/>before<sp/>&quot;start-tracking&quot;<sp/>procedure:<sp/>reset<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>properties<sp/>and<sp/>the<sp/>random<sp/>engine<sp/>(throw<sp/>away<sp/>cached<sp/>rnd<sp/>number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gTrack-&gt;ReSet();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theTLData.GetRNGEngine()-&gt;DiscardGauss();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>get<sp/>the<sp/>common<sp/>track<sp/>part<sp/>of<sp/>this<sp/>primary<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTrack<sp/>=<sp/>gTrack-&gt;GetTrack();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>track<sp/>is<sp/>an<sp/>e-<sp/>or<sp/>e+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>obtain<sp/>the<sp/>primary<sp/>electron<sp/>track<sp/>from<sp/>the<sp/>TL-data<sp/>which<sp/>the<sp/>next<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>from<sp/>the<sp/>stack<sp/>will<sp/>be<sp/>popped<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4HepEmElectronTrack*<sp/>eTrack<sp/>=<sp/>theTLData.GetPrimaryElectronTrack();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>perform<sp/>the<sp/>before<sp/>&quot;start-tracking&quot;<sp/>procedure:<sp/>reset<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>properties<sp/>and<sp/>the<sp/>random<sp/>engine<sp/>(throw<sp/>away<sp/>cached<sp/>rnd<sp/>number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTrack-&gt;ReSet();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theTLData.GetRNGEngine()-&gt;DiscardGauss();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>get<sp/>the<sp/>common<sp/>track<sp/>part<sp/>of<sp/>this<sp/>primary<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextTrack<sp/>=<sp/>eTrack-&gt;GetTrack();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>pop<sp/>the<sp/>next<sp/>track<sp/>from<sp/>the<sp/>stack<sp/>into<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>theTrackStack.<ref refid="class_track_stack_1a528b5fd33f46021e878d4d82dbbedd74" kindref="member">PopInto</ref>(*nextTrack);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>the<sp/>simplified<sp/>&quot;navigation&quot;<sp/>assumes,<sp/>that<sp/>tracks<sp/>start<sp/>from<sp/>inside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>`calorimeter`<sp/>volume.<sp/>This<sp/>is<sp/>true<sp/>for<sp/>secondary<sp/>(ParentID<sp/>&gt;<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>tracks<sp/>by<sp/>default<sp/>as<sp/>they<sp/>are<sp/>generated<sp/>inside<sp/>the<sp/>calorimeter<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>not<sp/>for<sp/>primary<sp/>tracks<sp/>(ParentID<sp/>=<sp/>-1)<sp/>generated<sp/>outside<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>calorimeter<sp/>volume<sp/>(in<sp/>the<sp/>vacuum,<sp/>pointing<sp/>to<sp/>the<sp/>calorimeter).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Therefore,<sp/>primaries<sp/>need<sp/>to<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>calorimeter<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(as<sp/>they<sp/>point<sp/>into<sp/>the<sp/>calorimeter<sp/>they<sp/>will<sp/>be<sp/>inside<sp/>then).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextTrack-&gt;GetParentID()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pos<sp/>=<sp/>nextTrack-&gt;GetPosition();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos[0]<sp/>=<sp/>theGeometry.<ref refid="class_geometry_1a783dfbcefde35a75bee9d08d33fb3908" kindref="member">GetCaloStartXposition</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>invoke<sp/>the<sp/>beginning<sp/>of<sp/>tracking<sp/>action<sp/>before<sp/>start<sp/>tracking<sp/>this<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_loop_1a050fdf744ded0828046e091193597ac7" kindref="member">BeginOfTrackingAction</ref>(theResult,<sp/>*nextTrack);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>call<sp/>the<sp/>gamma/electron<sp/>stepper<sp/>to<sp/>simulate<sp/>the<sp/>entire<sp/>history<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>next-track<sp/>(provided<sp/>now<sp/>in<sp/>the<sp/>primary<sp/>gamma/electron<sp/>track<sp/>member<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>TL-data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>NOTE:<sp/>the<sp/>secondaries,<sp/>generated<sp/>during<sp/>the<sp/>simulation<sp/>of<sp/>the<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>this<sp/>track,<sp/>are<sp/>all<sp/>inserted<sp/>into<sp/>the<sp/>track<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trackType<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>track<sp/>is<sp/>a<sp/>gamma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stepping_loop_1ac0a93eac4a0af26ef7fd033498fc9c3d" kindref="member">SteppingLoop::GammaStepper</ref>(theTLData,<sp/>theState,<sp/>theTrackStack,<sp/>theGeometry,<sp/>theResult,<sp/>eventID);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>track<sp/>is<sp/>an<sp/>e-<sp/>or<sp/>e+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stepping_loop_1a09ad124ae5c1192cb8e334608524ef71" kindref="member">SteppingLoop::ElectronStepper</ref>(theTLData,<sp/>theState,<sp/>theTrackStack,<sp/>theGeometry,<sp/>theResult,<sp/>eventID);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>invoke<sp/>the<sp/>end<sp/>of<sp/>tracking<sp/>action<sp/>when<sp/>the<sp/>end<sp/>of<sp/>its<sp/>simulation<sp/>history<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_loop_1a8963b2900f2efd4945bf9e455fc25033" kindref="member">EndOfTrackingAction</ref>(theResult,<sp/>*nextTrack);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4.<sp/>Call<sp/>the<sp/>end<sp/>of<sp/>event<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_loop_1a1a7804a680c5382e5803732d807f0251" kindref="member">EndOfEventAction</ref>(theResult,<sp/>eventID);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>the<sp/>event<sp/>ID<sp/>(i.e.<sp/>counter<sp/>of<sp/>simulated<sp/>events)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>++eventID;;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>and<sp/>report<sp/>the<sp/>event<sp/>processing<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>finish;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>gettimeofday(&amp;finish,<sp/>NULL);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theTime<sp/>=<sp/>((double)(finish.tv_sec-start.tv_sec)*1000000<sp/>+<sp/>(double)(finish.tv_usec-start.tv_usec))<sp/>/<sp/>1000000;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbosity<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>---<sp/>EventLoop::ProcessEvents:<sp/>completed<sp/>simulation<sp/>within<sp/>t<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTime<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[s]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_loop_1ae9a93b364296ff1e56ccdb2941eae4aa" kindref="member">EventLoop::BeginOfEventAction</ref>(<ref refid="struct_results" kindref="compound">Results</ref>&amp;<sp/>theResult,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4HepEmTrack&amp;<sp/>thePrimaryTrack)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>all<sp/>per-event<sp/>accumulators<sp/>in<sp/>results,<sp/>i.e.<sp/>that<sp/>are<sp/>used<sp/>to<sp/>accumulate<sp/>data<sp/>during<sp/>one<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1a56300e62e8aa6cd9fb4b1cbdc6ced71d" kindref="member">fEdepAbs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1acb585ff9dcb316804b4ac5999ee914d8" kindref="member">fEdepGap</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1a7ec88cb879bc6b6d3457dbe08d1bbf01" kindref="member">fNumSecGamma</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1a6b4ce615a2259673ce696b747c82812c" kindref="member">fNumSecElectron</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1aaacc361c66159659b16f7016bee3670c" kindref="member">fNumSecPositron</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1ae02070852cace2b3b94741ef81b200a0" kindref="member">fNumStepsGamma</ref><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1acf7c36b68976c0d745abf51b964f9335" kindref="member">fNumStepsElPos</ref><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_loop_1a1a7804a680c5382e5803732d807f0251" kindref="member">EventLoop::EndOfEventAction</ref>(<ref refid="struct_results" kindref="compound">Results</ref>&amp;<sp/>theResult,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventID)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>propagare<sp/>the<sp/>data<sp/>accunulated<sp/>during<sp/>this<sp/>event<sp/>to<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dum<sp/>=<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1a56300e62e8aa6cd9fb4b1cbdc6ced71d" kindref="member">fEdepAbs</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a7fc8bebd72ddf91416801fe0a2dbc07b" kindref="member">fEdepAbs</ref><sp/><sp/>+=<sp/>dum;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1aa8199cd60249fdbee9e78e2423856dd6" kindref="member">fEdepAbs2</ref><sp/>+=<sp/>dum*dum;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>dum<sp/>=<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1acb585ff9dcb316804b4ac5999ee914d8" kindref="member">fEdepGap</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a6de00d97715d97f9a133f059b7ef6ef0" kindref="member">fEdepGap</ref><sp/><sp/>+=<sp/>dum;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a32993f72fd83dfb4bf5c86b7e9d8ad45" kindref="member">fEdepGap2</ref><sp/>+=<sp/>dum*dum;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>dum<sp/>=<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1a7ec88cb879bc6b6d3457dbe08d1bbf01" kindref="member">fNumSecGamma</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a47beba7267414de3f4f49b24ec415ad0" kindref="member">fNumSecGamma</ref><sp/><sp/>+=<sp/>dum;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a3ca7616ea0ea716906d5053182c959c3" kindref="member">fNumSecGamma2</ref><sp/>+=<sp/>dum*dum;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>dum<sp/>=<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1a6b4ce615a2259673ce696b747c82812c" kindref="member">fNumSecElectron</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a1e2f826da8897f45b17f9a3ab9debfa3" kindref="member">fNumSecElectron</ref><sp/><sp/>+=<sp/>dum;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a548c3fab61b24d09d868341d2b2a587c" kindref="member">fNumSecElectron2</ref><sp/>+=<sp/>dum*dum;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>dum<sp/>=<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1aaacc361c66159659b16f7016bee3670c" kindref="member">fNumSecPositron</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a9ff96ee9ba078c770be81e807fce7fb3" kindref="member">fNumSecPositron</ref><sp/><sp/>+=<sp/>dum;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a54033a6b6e44c31928bf3f47002c2dbf" kindref="member">fNumSecPositron2</ref><sp/>+=<sp/>dum*dum;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>dum<sp/>=<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1ae02070852cace2b3b94741ef81b200a0" kindref="member">fNumStepsGamma</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a40a1269864fb39cb90b41eb20543b812" kindref="member">fNumStepsGamma</ref><sp/><sp/>+=<sp/>dum;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1aa7e6a1539475aaf2c03219ae4e592948" kindref="member">fNumStepsGamma2</ref><sp/>+=<sp/>dum*dum;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>dum<sp/>=<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1acf7c36b68976c0d745abf51b964f9335" kindref="member">fNumStepsElPos</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a155d60e512b400067017049605b6bf92" kindref="member">fNumStepsElPos</ref><sp/><sp/>+=<sp/>dum;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>theResult.<ref refid="struct_results_1a931fd090154f4d3298a74fe488034456" kindref="member">fNumStepsElPos2</ref><sp/>+=<sp/>dum*dum;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_loop_1a050fdf744ded0828046e091193597ac7" kindref="member">EventLoop::BeginOfTrackingAction</ref>(<ref refid="struct_results" kindref="compound">Results</ref>&amp;<sp/>theResult,<sp/>G4HepEmTrack&amp;<sp/>theTrack)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>this<sp/>track<sp/>is<sp/>a<sp/>secondary<sp/>(parent<sp/>ID<sp/>&gt;<sp/>-1)<sp/>then<sp/>its<sp/>type<sp/>(based<sp/>on<sp/>the<sp/>charge)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theTrack.GetParentID()<sp/>&gt;<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ich<sp/>=<sp/>theTrack.GetCharge();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ich)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1a7ec88cb879bc6b6d3457dbe08d1bbf01" kindref="member">fNumSecGamma</ref><sp/><sp/><sp/><sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1a6b4ce615a2259673ce696b747c82812c" kindref="member">fNumSecElectron</ref><sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>theResult.<ref refid="struct_results_1ab17af8cb8b09a2c55f3b2d7d4c8f07a9" kindref="member">fPerEventRes</ref>.<ref refid="struct_results_per_event_1aaacc361c66159659b16f7016bee3670c" kindref="member">fNumSecPositron</ref><sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_loop_1a8963b2900f2efd4945bf9e455fc25033" kindref="member">EventLoop::EndOfTrackingAction</ref>(<ref refid="struct_results" kindref="compound">Results</ref>&amp;<sp/></highlight><highlight class="comment">/*theResult*/</highlight><highlight class="normal">,<sp/>G4HepEmTrack&amp;<sp/></highlight><highlight class="comment">/*theTrack*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>nothing<sp/>here<sp/>now<sp/>(but<sp/>we<sp/>could<sp/>of<sp/>course)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/src/EventLoop.cc"/>
  </compounddef>
</doxygen>
