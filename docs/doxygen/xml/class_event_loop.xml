<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_event_loop" kind="class" language="C++" prot="public">
    <compoundname>EventLoop</compoundname>
    <includes refid="_event_loop_8hh" local="no">EventLoop.hh</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_event_loop_1a7b1d4b512c5fa676bd990cfaa6d561c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void EventLoop::ProcessEvents</definition>
        <argsstring>(G4HepEmTLData &amp;theTLData, G4HepEmState &amp;theState, PrimaryGenerator &amp;thePrimaryGenerator, Geometry &amp;theGeometry, Results &amp;theResult, int numEventToSimulate, int verbosity)</argsstring>
        <name>ProcessEvents</name>
        <qualifiedname>EventLoop::ProcessEvents</qualifiedname>
        <param>
          <type>G4HepEmTLData &amp;</type>
          <declname>theTLData</declname>
        </param>
        <param>
          <type>G4HepEmState &amp;</type>
          <declname>theState</declname>
        </param>
        <param>
          <type><ref refid="class_primary_generator" kindref="compound">PrimaryGenerator</ref> &amp;</type>
          <declname>thePrimaryGenerator</declname>
        </param>
        <param>
          <type><ref refid="class_geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>theGeometry</declname>
        </param>
        <param>
          <type><ref refid="struct_results" kindref="compound">Results</ref> &amp;</type>
          <declname>theResult</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numEventToSimulate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <briefdescription>
<para>Generates and simulates the required number of events. </para>
        </briefdescription>
        <detaileddescription>
<para>Events, i.e. primary track(s) are generated by using the input <computeroutput><ref refid="class_primary_generator" kindref="compound">PrimaryGenerator</ref></computeroutput>. At the beginning of each event, the <computeroutput><ref refid="class_primary_generator" kindref="compound">PrimaryGenerator</ref></computeroutput> is used to generate the primary track(s) that belong to the actual event. Note, that we have only one primary track per-event at the moment. The generated primary track(s) is inserted/pushed into the <computeroutput><ref refid="class_track_stack" kindref="compound">TrackStack</ref></computeroutput> as the very first track and the simulation of the event starts. During the simulation of the event:<itemizedlist>
<listitem><para>one track is popped from the stack and the appropriate <computeroutput><ref refid="class_stepping_loop" kindref="compound">SteppingLoop</ref></computeroutput> is called to simulate its entire history ina step-by-step way</para>
</listitem><listitem><para>at the end of each simulation step, secondary tracks that are created in that step in the related physics interaction (if any), are inserted/pushed into the <computeroutput><ref refid="class_track_stack" kindref="compound">TrackStack</ref></computeroutput> Simulation of the event is completed when the <computeroutput><ref refid="class_track_stack" kindref="compound">TrackStack</ref></computeroutput> becomes empty. See the implementation for more details.</para>
</listitem></itemizedlist>
</para>
<para>In order to be able to collect some infomation during the event processing, the <computeroutput><ref refid="class_event_loop_1af34a47f54be63c327216ab77bb0505d4" kindref="member">BeginOfEventAction()</ref></computeroutput>/<computeroutput><ref refid="class_event_loop_1ac63175ca75f98869d887e0b4dd72e38e" kindref="member">EndOfEventAction()</ref></computeroutput> methods are invoked before/after each event processing while the <computeroutput><ref refid="class_event_loop_1a4fd22ea39b677d0802d70f67e571b616" kindref="member">BeginOfTrackingAction()</ref></computeroutput>/<computeroutput><ref refid="class_event_loop_1ad4213d30cae150022509656095dd8f88" kindref="member">EndOfTrackingAction()</ref></computeroutput> methods are invoked before/after tracking each new track.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theTLData</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput>G4HepEm</computeroutput> specific (thread local) object primarily used to obtain all physics related information from <computeroutput>G4HepEm</computeroutput> needed to compute a simulation step </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theState</parametername>
</parameternamelist>
<parameterdescription>
<para>a <computeroutput>G4HepEm</computeroutput> specific object that stores pointers to the top level <computeroutput>G4HepEm</computeroutput> data structure and parameters that are used by <computeroutput>G4HepEm</computeroutput> to provide all physics related infomation needed to compute a simulation step </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thePrimaryGenerator</parametername>
</parameternamelist>
<parameterdescription>
<para>the primary generator that is used to generate primary track(s) at the beginning of each event (only one primary track per event in our case now) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theGeometry</parametername>
</parameternamelist>
<parameterdescription>
<para>the geometry of the application in which the input track history is simulated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theResult</parametername>
</parameternamelist>
<parameterdescription>
<para>the data structure that holds all the infomation needs to be collected during the simulation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numEventToSimulate</parametername>
</parameternamelist>
<parameterdescription>
<para>number of events required to be simulated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity</parametername>
</parameternamelist>
<parameterdescription>
<para>to control the verbosity of printouts reporting progress and state of the event processing </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/include/EventLoop.hh" line="50" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_event_loop_1a2eb3d9a9905743c87066f11253e60be2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EventLoop::EventLoop</definition>
        <argsstring>()=delete</argsstring>
        <name>EventLoop</name>
        <qualifiedname>EventLoop::EventLoop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/include/EventLoop.hh" line="53" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_event_loop_1af34a47f54be63c327216ab77bb0505d4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void EventLoop::BeginOfEventAction</definition>
        <argsstring>(Results &amp;theResult, int eventID, const G4HepEmTrack &amp;thePrimaryTrack)</argsstring>
        <name>BeginOfEventAction</name>
        <qualifiedname>EventLoop::BeginOfEventAction</qualifiedname>
        <param>
          <type><ref refid="struct_results" kindref="compound">Results</ref> &amp;</type>
          <declname>theResult</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eventID</declname>
        </param>
        <param>
          <type>const G4HepEmTrack &amp;</type>
          <declname>thePrimaryTrack</declname>
        </param>
        <briefdescription>
<para>Method invoked at the beginning of each event by passing the (single) primary track of the event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/include/EventLoop.hh" line="56" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_event_loop_1ac63175ca75f98869d887e0b4dd72e38e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void EventLoop::EndOfEventAction</definition>
        <argsstring>(Results &amp;theResult, int eventID)</argsstring>
        <name>EndOfEventAction</name>
        <qualifiedname>EventLoop::EndOfEventAction</qualifiedname>
        <param>
          <type><ref refid="struct_results" kindref="compound">Results</ref> &amp;</type>
          <declname>theResult</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eventID</declname>
        </param>
        <briefdescription>
<para>Method invoked at the end of each event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/include/EventLoop.hh" line="58" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_event_loop_1a4fd22ea39b677d0802d70f67e571b616" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void EventLoop::BeginOfTrackingAction</definition>
        <argsstring>(Results &amp;theResult, G4HepEmTrack &amp;theTrack)</argsstring>
        <name>BeginOfTrackingAction</name>
        <qualifiedname>EventLoop::BeginOfTrackingAction</qualifiedname>
        <param>
          <type><ref refid="struct_results" kindref="compound">Results</ref> &amp;</type>
          <declname>theResult</declname>
        </param>
        <param>
          <type>G4HepEmTrack &amp;</type>
          <declname>theTrack</declname>
        </param>
        <briefdescription>
<para>Method invoked before start tracking of a new track (provided as input argument). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/include/EventLoop.hh" line="61" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_event_loop_1ad4213d30cae150022509656095dd8f88" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void EventLoop::EndOfTrackingAction</definition>
        <argsstring>(Results &amp;theResult, G4HepEmTrack &amp;theTrack)</argsstring>
        <name>EndOfTrackingAction</name>
        <qualifiedname>EventLoop::EndOfTrackingAction</qualifiedname>
        <param>
          <type><ref refid="struct_results" kindref="compound">Results</ref> &amp;</type>
          <declname>theResult</declname>
        </param>
        <param>
          <type>G4HepEmTrack &amp;</type>
          <declname>theTrack</declname>
        </param>
        <briefdescription>
<para>Method invoked after terminating tracking of a track (provided as input argument). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/include/EventLoop.hh" line="63" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Event loop for simulating the required number of primary tracks/events. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>M. Novak </para>
</simplesect>
<simplesect kind="date"><para>July 2023</para>
</simplesect>
</para>
<para>The <computeroutput><ref refid="class_event_loop_1a7b1d4b512c5fa676bd990cfaa6d561c9" kindref="member">EventLoop::ProcessEvents()</ref></computeroutput> method is responsible to generate track(s) for the required number of events and simulate the histories of all primary and their secondary tracks. </para>
    </detaileddescription>
    <location file="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/include/EventLoop.hh" line="26" column="1" bodyfile="/Users/mnovak/projects/Geant4/For-DiffProgramming/hepemshow/Simulation/include/EventLoop.hh" bodystart="26" bodyend="66"/>
    <listofallmembers>
      <member refid="class_event_loop_1af34a47f54be63c327216ab77bb0505d4" prot="private" virt="non-virtual"><scope>EventLoop</scope><name>BeginOfEventAction</name></member>
      <member refid="class_event_loop_1a4fd22ea39b677d0802d70f67e571b616" prot="private" virt="non-virtual"><scope>EventLoop</scope><name>BeginOfTrackingAction</name></member>
      <member refid="class_event_loop_1ac63175ca75f98869d887e0b4dd72e38e" prot="private" virt="non-virtual"><scope>EventLoop</scope><name>EndOfEventAction</name></member>
      <member refid="class_event_loop_1ad4213d30cae150022509656095dd8f88" prot="private" virt="non-virtual"><scope>EventLoop</scope><name>EndOfTrackingAction</name></member>
      <member refid="class_event_loop_1a2eb3d9a9905743c87066f11253e60be2" prot="private" virt="non-virtual"><scope>EventLoop</scope><name>EventLoop</name></member>
      <member refid="class_event_loop_1a7b1d4b512c5fa676bd990cfaa6d561c9" prot="public" virt="non-virtual"><scope>EventLoop</scope><name>ProcessEvents</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
